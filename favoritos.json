[
    {
        "title": "[COLOR white]Dune -[COLOR darkgrey][7.5][/COLOR]-[/COLOR] [COLOR yellow][2021][/COLOR] [COLOR deepskyblue][7.8][/COLOR]",
        "path": "plugin://plugin.video.alfa/?%3d%3d"
    },
    {
        "title": "Dune",
        "path": "davs://webdav.drivehq.com:443/Kodi/CINE/dune%20%5Btt1160419%5D/dune.strm"
    },
    {
        "title": "[COLOR yellow][Gamovideo][/COLOR] [COLOR white][CAST][/COLOR] [COLOR limegreen][HD1080][/COLOR]",
        "path": "plugin://plugin.video.alfa/?"
    },
    {
        "title": "[COLOR white]Dune -[COLOR darkgrey][8.0][/COLOR]-[/COLOR] [COLOR yellow][2021][/COLOR] [COLOR deepskyblue][7.8][/COLOR]",
        "path": "plugin://plugin.video.alfa/?%3d%3d"
    }
]